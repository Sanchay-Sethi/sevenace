{"ast":null,"code":"var _jsxFileName = \"/Users/modulewrapper/Desktop/Sanchay/StudyMode/Web Dev/chakraUI/portfolio/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { IconButton } from \"@chakra-ui/button\";\nimport Aos from 'aos';\nimport 'aos/dist/aos.css';\nimport { css } from \"@emotion/react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { Link, animateScroll as scroll } from \"react-scroll\";\nimport { Drawer, DrawerBody, DrawerFooter, DrawerHeader, DrawerOverlay, DrawerContent, DrawerCloseButton, useDisclosure, Modal, ModalOverlay, ModalContent, ModalHeader, ModalFooter, ModalBody, ModalCloseButton } from \"@chakra-ui/react\";\nimport { Button, ButtonGroup } from \"@chakra-ui/react\";\nimport { useColorMode } from \"@chakra-ui/color-mode\";\nimport { Flex, VStack, Heading, Spacer } from \"@chakra-ui/layout\";\nimport { FaSun, FaMoon, FaInstagram, FaGithub, FaLinkedin, FaBars, FaDownload } from 'react-icons/fa';\nimport ScrollToTop from \"react-scroll-to-top\";\nimport Header from \"./components/Header\";\nimport Profile from \"./components/Profile\";\nimport Social from \"./components/Social\";\nimport BottomNav from \"./components/BottomNav\";\nimport SideNav from \"./components/SideNav\";\nimport About from \"./components/About\";\nimport Projects from './components/projects/Projects';\nimport Skills from './components/skills/Skills';\nimport Contact from './components/Contact';\nimport Footer from './components/Footer';\nimport { useMediaQuery } from '@chakra-ui/media-query';\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [loadingAnim, setLoadingAnim] = useState(false);\n  const {\n    colorMode,\n    toggleColorMode\n  } = useColorMode();\n  const isDark = colorMode === \"dark\";\n  const [isNotSmallerScreen] = useMediaQuery(\"(min-width:600px)\");\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const btnRef = React.useRef();\n  useEffect(() => {\n    setLoadingAnim(true);\n    setTimeout(() => {\n      setLoadingAnim(false);\n    }, 8000);\n    Aos.init({\n      duration: 2000\n    });\n    let progress = document.getElementById('progressbar');\n    let totalHeight = document.body.scrollHeight - window.innerHeight;\n\n    window.onscroll = function () {\n      let progressHeight = window.pageYOffset / totalHeight * 100;\n      progress.style.height = progressHeight + \"%\";\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sweet-loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setLoading(!loading),\n        children: \"Toggle Loader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: color,\n        onChange: input => setColor(input.target.value),\n        placeholder: \"Color of the loader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ClipLoader, {\n        color: color,\n        loading: loading,\n        css: override,\n        size: 150\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }, void 0, false);\n}\n\n_s(App, \"pQrguFoHLclmr4QN71KF5HEGf50=\", false, function () {\n  return [useColorMode, useMediaQuery, useDisclosure];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/modulewrapper/Desktop/Sanchay/StudyMode/Web Dev/chakraUI/portfolio/src/App.js"],"names":["React","useState","useEffect","IconButton","Aos","css","ClipLoader","Link","animateScroll","scroll","Drawer","DrawerBody","DrawerFooter","DrawerHeader","DrawerOverlay","DrawerContent","DrawerCloseButton","useDisclosure","Modal","ModalOverlay","ModalContent","ModalHeader","ModalFooter","ModalBody","ModalCloseButton","Button","ButtonGroup","useColorMode","Flex","VStack","Heading","Spacer","FaSun","FaMoon","FaInstagram","FaGithub","FaLinkedin","FaBars","FaDownload","ScrollToTop","Header","Profile","Social","BottomNav","SideNav","About","Projects","Skills","Contact","Footer","useMediaQuery","App","loadingAnim","setLoadingAnim","colorMode","toggleColorMode","isDark","isNotSmallerScreen","isOpen","onOpen","onClose","btnRef","useRef","setTimeout","init","duration","progress","document","getElementById","totalHeight","body","scrollHeight","window","innerHeight","onscroll","progressHeight","pageYOffset","style","height","loading","setLoading","color","input","setColor","target","value","override"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {useState, useEffect } from 'react';\nimport { IconButton } from \"@chakra-ui/button\";\nimport Aos from 'aos'\nimport 'aos/dist/aos.css'\nimport { css } from \"@emotion/react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\n\nimport { Link, animateScroll as scroll } from \"react-scroll\";import {\n  Drawer,\n  DrawerBody,\n  DrawerFooter,\n  DrawerHeader,\n  DrawerOverlay,\n  DrawerContent,\n  DrawerCloseButton,\n  useDisclosure,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n\n} from \"@chakra-ui/react\"\nimport { Button, ButtonGroup } from \"@chakra-ui/react\"\nimport { useColorMode } from \"@chakra-ui/color-mode\";\nimport { Flex, VStack, Heading, Spacer } from \"@chakra-ui/layout\";\nimport { FaSun, FaMoon, FaInstagram, FaGithub, FaLinkedin ,FaBars, FaDownload} from 'react-icons/fa'\nimport ScrollToTop from \"react-scroll-to-top\";\nimport Header from \"./components/Header\";\nimport Profile from \"./components/Profile\";\nimport Social from \"./components/Social\";\nimport BottomNav from \"./components/BottomNav\"\nimport SideNav from \"./components/SideNav\"\nimport About from \"./components/About\"\nimport Projects from './components/projects/Projects';\nimport Skills from './components/skills/Skills';\nimport Contact from './components/Contact';\nimport Footer from './components/Footer';\nimport { useMediaQuery } from '@chakra-ui/media-query';\nimport \"./App.css\"\n\nfunction App() {\n  const [loadingAnim, setLoadingAnim] = useState(false)\n\n  const { colorMode, toggleColorMode } = useColorMode();\n  const isDark = colorMode === \"dark\";\n  const [isNotSmallerScreen] = useMediaQuery(\"(min-width:600px)\");\n  const { isOpen, onOpen, onClose } = useDisclosure()\n  const btnRef = React.useRef();\n\n  useEffect(()=>{\n    setLoadingAnim(true);\n    setTimeout(()=>{\n      setLoadingAnim(false)\n    },8000)\n\n    Aos.init({duration:2000});\n    let progress = document.getElementById('progressbar');\n    let totalHeight =document.body.scrollHeight - window.innerHeight;\n\n      window.onscroll = function () {\n        let progressHeight = (window.pageYOffset / totalHeight) *100;\n        progress.style.height = progressHeight + \"%\";\n      }\n  },[])\n\n \n\n  return (\n    <>\n    {\n      loading ? <div className=\"sweet-loading\">\n      <button onClick={() => setLoading(!loading)}>Toggle Loader</button>\n      <input value={color} onChange={(input) => setColor(input.target.value)} placeholder=\"Color of the loader\" />\n\n      <ClipLoader color={color} loading={loading} css={override} size={150} />\n    </div> : \n    <>\n\n    </>\n    }\n    \n    </>\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}